{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { lastValueFrom, Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst adminBooksURL = '/api/books/list/admin';\nconst userBooksURL = '/api/books/list/user';\nexport let LibraryService = /*#__PURE__*/(() => {\n  class LibraryService {\n    constructor(http) {\n      this.http = http;\n      this.onNewSearch = new Subject();\n      this.borrowedBooks = new Subject();\n    }\n\n    getUserListOfBorrowedBooks(user) {\n      const headers = new HttpHeaders().set('Accept', 'application/json');\n      const userBorrowURL = '/api/books/list/user/borrowed';\n      const userPayload = {\n        email: user.email\n      };\n      return lastValueFrom(this.http.post(userBorrowURL, userPayload, {\n        headers\n      })).then(data => {\n        console.log(data);\n        this.borrowedBooks.next(data);\n      }).catch(error => {\n        console.info(error);\n      });\n    }\n\n    returnBorrowedBook(user, book) {\n      const headers = new HttpHeaders().set('Accept', 'application/json');\n      const userReturnURL = '/api/books/return';\n      const userPayload = {\n        email: user.email,\n        book: book\n      };\n      return lastValueFrom(this.http.post(userReturnURL, userPayload, {\n        headers\n      })).then(data => {\n        console.log(data);\n        this.borrowedBooks.next(data);\n      }).catch(error => {\n        console.info(error);\n      });\n    }\n\n    getAdminListOfBooks(payload) {\n      const headers = new HttpHeaders().set('Accept', 'application/json');\n      return lastValueFrom(this.http.post(adminBooksURL, payload, {\n        headers\n      })).then(data => {\n        this.onNewSearch.next(data);\n      }).catch(error => {\n        console.info(error);\n      });\n    }\n\n    getAdminNextListOfBooks(payload, index) {\n      const headers = new HttpHeaders().set('Accept', 'application/json');\n      const nextURL = `/api/books/list/admin/${index}`;\n      return lastValueFrom(this.http.post(nextURL, payload, {\n        headers\n      })).then(data => {\n        this.onNewSearch.next(data);\n      }).catch(error => {\n        console.info(error);\n      });\n    }\n\n    addBooksToLibrary(cartBooks) {\n      const headers = new HttpHeaders().set('Accept', 'application/json');\n      const addURL = `/api/books/add/`;\n      return lastValueFrom(this.http.post(addURL, cartBooks, {\n        headers\n      })).then(data => {\n        console.info(data);\n      }).catch(error => {\n        console.info(error);\n      });\n    }\n\n    getUserListOfBooks(payload) {\n      const headers = new HttpHeaders().set('Accept', 'application/json');\n      return lastValueFrom(this.http.post(userBooksURL, payload, {\n        headers\n      })).then(data => {\n        this.onNewSearch.next(data);\n      }).catch(error => {\n        console.info(error);\n      });\n    }\n\n    getUserNextListOfBooks(payload, index) {\n      const headers = new HttpHeaders().set('Accept', 'application/json');\n      const userNextURL = `/api/books/list/user/${index}`;\n      return lastValueFrom(this.http.post(userNextURL, payload, {\n        headers\n      })).then(data => {\n        this.onNewSearch.next(data);\n      }).catch(error => {\n        console.info(error);\n      });\n    }\n\n    addBorrowedBooks(user, cartBooks) {\n      const headers = new HttpHeaders().set('Accept', 'application/json');\n      const addURL = `/api/books/add/user`;\n      const payload = {\n        books: cartBooks,\n        email: user.email\n      };\n      return lastValueFrom(this.http.post(addURL, payload, {\n        headers\n      })).then(data => {\n        console.info(data);\n      }).catch(error => {\n        console.info(error);\n      });\n    }\n\n  }\n\n  LibraryService.ɵfac = function LibraryService_Factory(t) {\n    return new (t || LibraryService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  LibraryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LibraryService,\n    factory: LibraryService.ɵfac\n  });\n  return LibraryService;\n})();","map":null,"metadata":{},"sourceType":"module"}